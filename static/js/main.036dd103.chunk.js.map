{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","src","avatar","alt","angle","content","name","text","time","messageData","HW1","Affair","priorityClass","item","affair","priority","onClick","deleteAffairCallback","_id","button","Affairs","mappedAffairs","data","map","a","onAll","filter","active","onHigh","onMiddle","onLow","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onEnter","inputClass","errorInput","input","value","onChange","onKeyDown","onBlur","disabled","count","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","trimmedName","currentTarget","trim","key","HW3","setUsers","user","v1","SuperInputText","type","onChangeText","onKeyPress","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.036dd103.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Affairs_button__fyJuB\",\"active\":\"Affairs_active__2rYHK\",\"affair\":\"Affairs_affair__2dXYS\",\"item\":\"Affairs_item__1BEXD\",\"high\":\"Affairs_high__bggYp\",\"middle\":\"Affairs_middle___FZ31\",\"low\":\"Affairs_low__Rx6uX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__32itk\",\"avatar\":\"Message_avatar__25hEK\",\"content\":\"Message_content__2LxD7\",\"angle\":\"Message_angle__1hmfP\",\"text\":\"Message_text__24swf\",\"name\":\"Message_name__nqWNv\",\"time\":\"Message_time__Bze13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__3_dbw\",\"error\":\"Greeting_error__2lpv_\",\"input\":\"Greeting_input__3IAHb\",\"errorInput\":\"Greeting_errorInput__2K0cV\",\"button\":\"Greeting_button__1umfi\",\"count\":\"Greeting_count__3enr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__39UkK\",\"superInput\":\"SuperInputText_superInput__4Dgzm\",\"errorInput\":\"SuperInputText_errorInput__2rlTU\",\"error\":\"SuperInputText_error__16-qk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__OXQYk\",\"red\":\"SuperButton_red__s_j02\",\"button\":\"SuperButton_button__3l6Gj\",\"blink\":\"SuperButton_blink__qeEs2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__22526\",\"column\":\"HW4_column__1QR9U\",\"testSpanError\":\"HW4_testSpanError__15i6M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3vj2J\",\"checkbox\":\"SuperCheckbox_checkbox__3zwCC\",\"spanClassName\":\"SuperCheckbox_spanClassName__WscE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1lp6l\"};","import React from 'react'\nimport {MessageDataType} from './HW1'\nimport s from './Message.module.css'\n\nexport function Message(props: MessageDataType) {\n    return (\n        <div className={s.message}>\n            <img src={props.avatar} alt={'avatar'} className={s.avatar}/>\n\n            <div className={s.angle}/>\n\n            <div className={s.content}>\n                <div className={s.name}>{props.name}</div>\n                <div className={s.text}>{props.message}</div>\n                <div className={s.time}>{props.time}</div>\n            </div>\n        </div>\n\n    )\n}\n\n","import React from 'react'\nimport { Message } from './Message'\n\nexport type MessageDataType = {\n    avatar?: string\n    name: string\n    message: string\n    time: string\n}\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Ivan Ivanov',\n    message: 'Hello',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from './HW2';\nimport s from './Affairs.module.css';\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    }\n\n    const priorityClass = s.item + ' ' + s[props.affair.priority]\n\n    return (\n        <div className={s.affair}>\n            <div className={s.item}>{props.affair.name}</div>\n            <div className={priorityClass}>{props.affair.priority}</div>\n            <button onClick={deleteCallback} className={s.item + ' ' + s.button}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, filterAffairs, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = {\n    data: AffairType[]\n    setFilter: (filter: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n    filter: FilterType\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    }\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    const onAll = s.button + ' ' + (props.filter === 'all' ? s.active : '')\n    const onHigh = s.button + ' ' + (props.filter === 'high' ? s.active : '')\n    const onMiddle = s.button + ' ' + (props.filter === 'middle' ? s.active : '')\n    const onLow = s.button + ' ' + (props.filter === 'low' ? s.active : '')\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll} className={onAll}>All</button>\n            <button onClick={setHigh} className={onHigh}>High</button>\n            <button onClick={setMiddle} className={onMiddle}>Middle</button>\n            <button onClick={setLow} className={onLow}>Low</button>\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType =  'high' | 'low' | 'middle'\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => {\n    if (filter === 'all') return affairs\n    else return affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n                filter={filter}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, KeyboardEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n    onEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers, onEnter} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.errorInput : s.input\n\n    return (\n        <div>\n            <div>\n                <input\n                    value={name}\n                    onChange={setNameCallback}\n                    className={inputClass}\n                    onKeyDown={onEnter}\n                    onBlur={setNameCallback}\n                />\n                <div className={s.error}>\n                    {error}\n                </div>\n            </div>\n            <button className={s.button} onClick={addUser} disabled={!name}>add</button>\n            <span className={s.count}>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from './HW3';\n\ntype GreetingContainerPropsType = {\n    users: UserType[]\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<string>('')\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const trimmedName = e.currentTarget.value.trim();\n        if (trimmedName) {\n            setName(trimmedName)\n            error && setError('')\n        } else {\n            name && setName('')\n            setError('Name is require')\n        }\n    }\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`)\n        setName('')\n    }\n\n    const onEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && name) {\n            addUser()\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            onEnter={onEnter}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react';\nimport GreetingContainer from './GreetingContainer';\nimport {v1} from 'uuid'\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([])\n\n    const addUserCallback = (name: string) => {\n        const user = {\n            _id: v1(),\n            name,\n        }\n        setUsers([...users, user])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}`\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2';\nimport HW3 from '../../../p2-homeworks/h3/HW3';\nimport HW4 from '../../../p2-homeworks/h4/HW4';\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App/>,document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}